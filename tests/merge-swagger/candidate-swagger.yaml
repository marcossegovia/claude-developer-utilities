openapi: 3.0.3
info:
  title: Candidate API Updates
  description: New endpoints and modifications
  version: 1.1.0

paths:
  # New endpoint
  /products:
    get:
      summary: List products
      tags:
        - Products
      parameters:
        - name: category
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Create product
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
      responses:
        '201':
          description: Product created

  # Existing endpoint with modifications
  /users:
    get:
      summary: List users with enhanced filtering
      tags:
        - Users
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [active, inactive, pending]
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  # New endpoint
  /notifications:
    get:
      summary: Get user notifications
      tags:
        - Notifications
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'

components:
  schemas:
    # Duplicate with different fields (conflict scenario)
    User:
      type: object
      required:
        - id
        - email
        - username
        - status
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        username:
          type: string
          minLength: 3
        name:
          type: string
        status:
          type: string
          enum: [active, inactive, pending]
        lastLoginAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time

    # New schema
    Product:
      type: object
      required:
        - id
        - name
        - price
        - category
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
          minimum: 0
        category:
          type: string
        inStock:
          type: boolean
          default: true
        createdAt:
          type: string
          format: date-time

    CreateProductRequest:
      type: object
      required:
        - name
        - price
        - category
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
          minimum: 0
        category:
          type: string

    # Duplicate with same name but different structure (conflict scenario)
    OrderItem:
      type: object
      required:
        - productId
        - quantity
        - unitPrice
        - discount
      properties:
        productId:
          type: string
          format: uuid
        quantity:
          type: integer
          minimum: 1
        unitPrice:
          type: number
          format: float
        discount:
          type: number
          format: float
          default: 0.0
        taxAmount:
          type: number
          format: float

    # New schema
    Notification:
      type: object
      required:
        - id
        - userId
        - message
        - type
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        message:
          type: string
        type:
          type: string
          enum: [info, warning, error, success]
        read:
          type: boolean
          default: false
        createdAt:
          type: string
          format: date-time